on:

  schedule:

    - cron: '10 10,17 * * *' # 每天上午 10:10 和下午 5:10（UTC 时间）

  push:

    branches:

      - ipv4 # 仅在 ipv4 分支上监视文件更改

    paths:

      - 'litelive_cctvweishi_test.txt' # 监视这个文件

      - 'litelive_cctvweishi.txt' # 监视另一个文件

      - '.github/workflows/blacklist8.yml' # 监视另一个文件

      - 'some_directory/specific_file.txt' # 监视特定目录下的特定文件

      # 如果想要监视某个目录下的所有 .txt 文件，可以使用通配符

      - 'some_directory/*.txt'

jobs:
  run_script:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        persist-credentials: false # 不要保存凭证到 git 配置中
        clean: true # 清理工作目录中的未跟踪文件和目录（可选，但有助于确保工作目录干净）

    # ... 其他步骤，如设置 Python 环境、安装依赖等 ...

    - name: Run Python script
      run: python blacklist1/blacklist8.py

    - name: Add and commit generated files
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        
        # 添加所有由 Actions 生成的更改（假设这些更改是新文件或已修改的文件）
        git add . # 注意：这里使用 . 可能会添加所有更改，包括可能不需要提交的更改。
                  # 如果知道生成的文件的确切路径，应该使用更具体的路径，例如 git add path/to/generated/files
        
        # 检查是否有更改需要提交
        if ! git diff --cached --quiet; then
          # 提交更改
          git commit -m "Auto-update generated files"
          # 推送更改到远程仓库
          git push
        fi
        
    env:
      TZ: Asia/Shanghai
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # 确保这里使用了具有推送权限的令牌
